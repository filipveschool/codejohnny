apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'

/*
buildscript {
    ext { springBootVersion = '1.4.3.RELEASE' }
    repositories {
        mavenCentral()
    }
}
*/


repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java.srcDirs = ['src/main/java', 'src/main/resources']
        resources.srcDir('src/main/resources')
    }
    test {
        java.srcDir('src/test/java')
    }
}

version = '2.0.3'
mainClassName = 'com.codejohnny.client.Launcher'

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'CodeJohnny',
                'Implementation-Version': version,
                'Main-Class': 'com.codejohnny.Launcher'
    }
    baseName = project.name
    version = null
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it)
    } }
    with jar
}

configure(fatJar) {
    group = build
    description = 'Create Executable CodeJohnny.jar'
}

dependencies {

    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'commons-logging:commons-logging:1.2'
    compile 'org.lucee:oswego-concurrent:1.3.4'
    compile 'com.google.guava:guava:22.0'
    compile 'org.apache.jcs:jcs:1.3'
    compile 'log4j:log4j:1.2.17'
    compile 'mysql:mysql-connector-java:5.1.37'
    compile 'org.postgresql:postgresql:9.3-1104-jdbc41'
    compile 'com.google.inject:guice:4.1.0'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.github.spullara.mustache.java:compiler:0.9.5'

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.8.9"
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile "org.hamcrest:hamcrest-library:1.3"
}
